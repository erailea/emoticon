{
	"info": {
		"_postman_id": "emotion-analysis-api",
		"name": "Emotion Analysis API",
		"description": "Complete API collection for emotion analysis from images at specific timestamps",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8765",
			"type": "string"
		},
		{
			"key": "session_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has status field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('status');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the API is running and healthy"
			},
			"response": []
		},
		{
			"name": "2. API Root Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has API info\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('api');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				},
				"description": "Get API information and welcome message"
			},
			"response": []
		},
		{
			"name": "3. Start New Session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has sessionId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('sessionId');",
							"    pm.collectionVariables.set('session_id', jsonData.sessionId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/start",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"start"
					]
				},
				"description": "Create a new emotion analysis session"
			},
			"response": []
		},
		{
			"name": "4. Upload Images (Form-Data)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Files uploaded successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('uploadedFiles');",
							"    pm.expect(jsonData.uploadedFiles).to.be.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "sessionId",
							"value": "{{session_id}}",
							"type": "text",
							"description": "Session ID from step 3"
						},
						{
							"key": "timestamps",
							"value": "[1.5, 3.2, 5.8]",
							"type": "text",
							"description": "JSON array of timestamps"
						},
						{
							"key": "files",
							"type": "file",
							"src": [],
							"description": "Upload your image file here"
						},
						{
							"key": "files",
							"type": "file",
							"src": [],
							"description": "Upload second image file"
						},
						{
							"key": "files",
							"type": "file",
							"src": [],
							"description": "Upload third image file"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						""
					]
				},
				"description": "Upload image files with timestamps for emotion analysis"
			},
			"response": []
		},
		{
			"name": "5. End Session & Get Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has emotion results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('sessionId');",
							"    pm.expect(jsonData).to.have.property('aspects');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/end?sessionId={{session_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"end"
					],
					"query": [
						{
							"key": "sessionId",
							"value": "{{session_id}}",
							"description": "Session ID to end and analyze"
						}
					]
				},
				"description": "End the session and get emotion analysis results"
			},
			"response": []
		},
		{
			"name": "6. List All Sessions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has sessions list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('sessions');",
							"    pm.expect(jsonData).to.have.property('total_sessions');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/sessions",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"sessions"
					]
				},
				"description": "Get list of all sessions with photo counts and session IDs"
			},
			"response": []
		}
	]
} 